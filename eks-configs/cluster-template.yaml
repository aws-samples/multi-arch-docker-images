---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: multi-arch-demo-cluster
  region: <REGION>
  version: "1.18"

availabilityZones: ["<REGION>a", "<REGION>b", "<REGION>c"]

managedNodeGroups:
  - name: nodegroup-amd
    desiredCapacity: 1
    instanceType: t3.small
    ssh:
      allow: false
    labels: {role: worker}
    tags: 
      nodegroup-role: worker 
      k8s.io/cluster-autoscaler/poc-cluster: owned 
      k8s.io/cluster-autoscaler/enabled: "true"
      Name: poc-cluster-nodes

  - name: nodegroup-arm
    instanceType: m6g.medium
    desiredCapacity: 1
    ssh:
      allow: false
    labels: {role: worker}
    tags:
      nodegroup-role: worker 
      k8s.io/cluster-autoscaler/poc-cluster: owned 
      k8s.io/cluster-autoscaler/enabled: "true"
      Name: poc-cluster-nodes-arm

    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
      withAddonPolicies:
        imageBuilder: false
        autoScaler: true
        externalDNS: true
        certManager: true
        appMesh: true
        ebs: true
        fsx: true
        efs: true
        albIngress: true
        xRay: true
        cloudWatch: true

cloudWatch:
  clusterLogging:
    enableTypes: ["audit", "authenticator", "controllerManager"]
